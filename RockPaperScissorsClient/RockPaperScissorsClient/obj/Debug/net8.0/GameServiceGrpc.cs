// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GameService.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981
#region Designer generated code

using grpc = global::Grpc.Core;

namespace RockPaperScissorsAPI.GrpcServices {
  public static partial class GameService
  {
    static readonly string __ServiceName = "game.GameService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RockPaperScissorsAPI.GrpcServices.BalanceRequest> __Marshaller_game_BalanceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RockPaperScissorsAPI.GrpcServices.BalanceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RockPaperScissorsAPI.GrpcServices.BalanceReply> __Marshaller_game_BalanceReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RockPaperScissorsAPI.GrpcServices.BalanceReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RockPaperScissorsAPI.GrpcServices.ListGamesRequest> __Marshaller_game_ListGamesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RockPaperScissorsAPI.GrpcServices.ListGamesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RockPaperScissorsAPI.GrpcServices.ListGamesReply> __Marshaller_game_ListGamesReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RockPaperScissorsAPI.GrpcServices.ListGamesReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RockPaperScissorsAPI.GrpcServices.JoinGameRequest> __Marshaller_game_JoinGameRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RockPaperScissorsAPI.GrpcServices.JoinGameRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RockPaperScissorsAPI.GrpcServices.JoinGameReply> __Marshaller_game_JoinGameReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RockPaperScissorsAPI.GrpcServices.JoinGameReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RockPaperScissorsAPI.GrpcServices.MakeMoveRequest> __Marshaller_game_MakeMoveRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RockPaperScissorsAPI.GrpcServices.MakeMoveRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RockPaperScissorsAPI.GrpcServices.MakeMoveReply> __Marshaller_game_MakeMoveReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RockPaperScissorsAPI.GrpcServices.MakeMoveReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RockPaperScissorsAPI.GrpcServices.CheckGameStatusRequest> __Marshaller_game_CheckGameStatusRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RockPaperScissorsAPI.GrpcServices.CheckGameStatusRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RockPaperScissorsAPI.GrpcServices.CheckGameStatusReply> __Marshaller_game_CheckGameStatusReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RockPaperScissorsAPI.GrpcServices.CheckGameStatusReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RockPaperScissorsAPI.GrpcServices.CheckGameResultRequest> __Marshaller_game_CheckGameResultRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RockPaperScissorsAPI.GrpcServices.CheckGameResultRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::RockPaperScissorsAPI.GrpcServices.CheckGameResultReply> __Marshaller_game_CheckGameResultReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::RockPaperScissorsAPI.GrpcServices.CheckGameResultReply.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RockPaperScissorsAPI.GrpcServices.BalanceRequest, global::RockPaperScissorsAPI.GrpcServices.BalanceReply> __Method_GetBalance = new grpc::Method<global::RockPaperScissorsAPI.GrpcServices.BalanceRequest, global::RockPaperScissorsAPI.GrpcServices.BalanceReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetBalance",
        __Marshaller_game_BalanceRequest,
        __Marshaller_game_BalanceReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RockPaperScissorsAPI.GrpcServices.ListGamesRequest, global::RockPaperScissorsAPI.GrpcServices.ListGamesReply> __Method_ListGames = new grpc::Method<global::RockPaperScissorsAPI.GrpcServices.ListGamesRequest, global::RockPaperScissorsAPI.GrpcServices.ListGamesReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListGames",
        __Marshaller_game_ListGamesRequest,
        __Marshaller_game_ListGamesReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RockPaperScissorsAPI.GrpcServices.JoinGameRequest, global::RockPaperScissorsAPI.GrpcServices.JoinGameReply> __Method_JoinGame = new grpc::Method<global::RockPaperScissorsAPI.GrpcServices.JoinGameRequest, global::RockPaperScissorsAPI.GrpcServices.JoinGameReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "JoinGame",
        __Marshaller_game_JoinGameRequest,
        __Marshaller_game_JoinGameReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RockPaperScissorsAPI.GrpcServices.MakeMoveRequest, global::RockPaperScissorsAPI.GrpcServices.MakeMoveReply> __Method_MakeMove = new grpc::Method<global::RockPaperScissorsAPI.GrpcServices.MakeMoveRequest, global::RockPaperScissorsAPI.GrpcServices.MakeMoveReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "MakeMove",
        __Marshaller_game_MakeMoveRequest,
        __Marshaller_game_MakeMoveReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RockPaperScissorsAPI.GrpcServices.CheckGameStatusRequest, global::RockPaperScissorsAPI.GrpcServices.CheckGameStatusReply> __Method_CheckGameStatus = new grpc::Method<global::RockPaperScissorsAPI.GrpcServices.CheckGameStatusRequest, global::RockPaperScissorsAPI.GrpcServices.CheckGameStatusReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CheckGameStatus",
        __Marshaller_game_CheckGameStatusRequest,
        __Marshaller_game_CheckGameStatusReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::RockPaperScissorsAPI.GrpcServices.CheckGameResultRequest, global::RockPaperScissorsAPI.GrpcServices.CheckGameResultReply> __Method_CheckGameResult = new grpc::Method<global::RockPaperScissorsAPI.GrpcServices.CheckGameResultRequest, global::RockPaperScissorsAPI.GrpcServices.CheckGameResultReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CheckGameResult",
        __Marshaller_game_CheckGameResultRequest,
        __Marshaller_game_CheckGameResultReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::RockPaperScissorsAPI.GrpcServices.GameServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for GameService</summary>
    public partial class GameServiceClient : grpc::ClientBase<GameServiceClient>
    {
      /// <summary>Creates a new client for GameService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public GameServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for GameService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public GameServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected GameServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected GameServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// rpc calls
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RockPaperScissorsAPI.GrpcServices.BalanceReply GetBalance(global::RockPaperScissorsAPI.GrpcServices.BalanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBalance(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// rpc calls
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RockPaperScissorsAPI.GrpcServices.BalanceReply GetBalance(global::RockPaperScissorsAPI.GrpcServices.BalanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetBalance, null, options, request);
      }
      /// <summary>
      /// rpc calls
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RockPaperScissorsAPI.GrpcServices.BalanceReply> GetBalanceAsync(global::RockPaperScissorsAPI.GrpcServices.BalanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBalanceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// rpc calls
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RockPaperScissorsAPI.GrpcServices.BalanceReply> GetBalanceAsync(global::RockPaperScissorsAPI.GrpcServices.BalanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetBalance, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RockPaperScissorsAPI.GrpcServices.ListGamesReply ListGames(global::RockPaperScissorsAPI.GrpcServices.ListGamesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListGames(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RockPaperScissorsAPI.GrpcServices.ListGamesReply ListGames(global::RockPaperScissorsAPI.GrpcServices.ListGamesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListGames, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RockPaperScissorsAPI.GrpcServices.ListGamesReply> ListGamesAsync(global::RockPaperScissorsAPI.GrpcServices.ListGamesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListGamesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RockPaperScissorsAPI.GrpcServices.ListGamesReply> ListGamesAsync(global::RockPaperScissorsAPI.GrpcServices.ListGamesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListGames, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RockPaperScissorsAPI.GrpcServices.JoinGameReply JoinGame(global::RockPaperScissorsAPI.GrpcServices.JoinGameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return JoinGame(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RockPaperScissorsAPI.GrpcServices.JoinGameReply JoinGame(global::RockPaperScissorsAPI.GrpcServices.JoinGameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_JoinGame, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RockPaperScissorsAPI.GrpcServices.JoinGameReply> JoinGameAsync(global::RockPaperScissorsAPI.GrpcServices.JoinGameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return JoinGameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RockPaperScissorsAPI.GrpcServices.JoinGameReply> JoinGameAsync(global::RockPaperScissorsAPI.GrpcServices.JoinGameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_JoinGame, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RockPaperScissorsAPI.GrpcServices.MakeMoveReply MakeMove(global::RockPaperScissorsAPI.GrpcServices.MakeMoveRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MakeMove(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RockPaperScissorsAPI.GrpcServices.MakeMoveReply MakeMove(global::RockPaperScissorsAPI.GrpcServices.MakeMoveRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MakeMove, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RockPaperScissorsAPI.GrpcServices.MakeMoveReply> MakeMoveAsync(global::RockPaperScissorsAPI.GrpcServices.MakeMoveRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MakeMoveAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RockPaperScissorsAPI.GrpcServices.MakeMoveReply> MakeMoveAsync(global::RockPaperScissorsAPI.GrpcServices.MakeMoveRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MakeMove, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RockPaperScissorsAPI.GrpcServices.CheckGameStatusReply CheckGameStatus(global::RockPaperScissorsAPI.GrpcServices.CheckGameStatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckGameStatus(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RockPaperScissorsAPI.GrpcServices.CheckGameStatusReply CheckGameStatus(global::RockPaperScissorsAPI.GrpcServices.CheckGameStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CheckGameStatus, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RockPaperScissorsAPI.GrpcServices.CheckGameStatusReply> CheckGameStatusAsync(global::RockPaperScissorsAPI.GrpcServices.CheckGameStatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckGameStatusAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RockPaperScissorsAPI.GrpcServices.CheckGameStatusReply> CheckGameStatusAsync(global::RockPaperScissorsAPI.GrpcServices.CheckGameStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CheckGameStatus, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RockPaperScissorsAPI.GrpcServices.CheckGameResultReply CheckGameResult(global::RockPaperScissorsAPI.GrpcServices.CheckGameResultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckGameResult(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::RockPaperScissorsAPI.GrpcServices.CheckGameResultReply CheckGameResult(global::RockPaperScissorsAPI.GrpcServices.CheckGameResultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CheckGameResult, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RockPaperScissorsAPI.GrpcServices.CheckGameResultReply> CheckGameResultAsync(global::RockPaperScissorsAPI.GrpcServices.CheckGameResultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckGameResultAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::RockPaperScissorsAPI.GrpcServices.CheckGameResultReply> CheckGameResultAsync(global::RockPaperScissorsAPI.GrpcServices.CheckGameResultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CheckGameResult, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override GameServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new GameServiceClient(configuration);
      }
    }

  }
}
#endregion
